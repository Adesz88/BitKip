import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.0.1'
}

group 'io.beanvortex'
version '1.4.7'
sourceCompatibility = '21'
targetCompatibility = '21'
mainClassName = 'io.beanvortex.bitkip.BitKip'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainClass = mainClassName
    mainModule = 'io.beanvortex.bitkip'
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.swing']
}

dependencies {
    implementation 'org.controlsfx:controlsfx:11.1.0'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.xerial:sqlite-jdbc:3.42.0.0'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation "io.helidon.webserver:helidon-webserver:3.2.2"
    implementation "io.helidon.webserver:helidon-webserver-cors:3.2.2"
    implementation 'io.helidon.media:helidon-media-jackson:3.2.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
    implementation 'ch.qos.logback:logback-classic:1.4.12'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1'
    implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'
    implementation 'io.projectreactor:reactor-core:3.4.24'
    implementation 'net.java.dev.jna:jna:5.14.0'
    implementation 'net.java.dev.jna:jna-platform:5.14.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

test {
    useJUnitPlatform()
}

jlink {
    launcher {
        name = 'BitKip'
    }
    jpackage {
        if (OperatingSystem.current().windows) {
            appVersion = version
            installerName = 'BitKip'
            installerOptions = ['--win-menu', '--win-shortcut',
                                '--icon', 'src/main/resources/io/beanvortex/bitkip/icons/logo.ico',
                                "--app-version", version as String,
                                "--win-menu-group", "BitKip",
                                "--description", "Free download manager for desktop",
                                '--vendor', 'BeanVortex']
            imageOptions = ['--icon', 'src/main/resources/io/beanvortex/bitkip/icons/logo.ico']
        }
        if (OperatingSystem.current().macOsX) {
            appVersion = version
            installerName = 'BitKip'
            installerOptions = ['--mac-package-name', 'BitKip',
                                '--icon', 'src/main/resources/io/beanvortex/bitkip/icons/logo.icns',
                                "--app-version", version as String,
                                "--description", "Free download manager for desktop",
                                '--vendor', 'BeanVortex']
            imageOptions = ['--icon', 'src/main/resources/io/beanvortex/bitkip/icons/logo.icns']
        }
    }
    addExtraDependencies 'slf4j'
    mergedModule {
        excludeProvides servicePattern: 'reactor.blockhound.*'
    }
}

tasks.register('fatJar', Jar) {
    manifest {
        attributes 'Main-Class': "io.beanvortex.bitkip.Launcher"
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


jlinkZip {
    group = 'distribution'
}